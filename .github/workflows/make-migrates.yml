name: Deploy Make Migrations DB

on:
  workflow_dispatch:

permissions:
  id-token: write
  contents: read  

jobs:
  deploy_and_migrate:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::851725643108:role/allow_command_dbt
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Find Running ECS Task
        id: find_task
        run: |
          SERVICE_NAME=$(aws ecs list-services \
            --cluster DjangoECSCluster \
            --query "serviceArns[?contains(@, 'ecs-stack-ECSService-')]" \
            --output text | awk -F '/' '{print $NF}')

          TASK_ARN=$(aws ecs list-tasks \
            --cluster DjangoECSCluster \
            --service-name $SERVICE_NAME \
            --desired-status RUNNING \
            --query "taskArns[0]" \
            --output text)

          echo "task_arn=$TASK_ARN" >> $GITHUB_OUTPUT
          echo "service_name=$SERVICE_NAME" >> $GITHUB_OUTPUT

      - name: Debug ECS Task
        run: |
          echo "Debugging ECS Task"
          echo "Task ARN: ${{ steps.find_task.outputs.task_arn }}"
          echo "Service Name: ${{ steps.find_task.outputs.service_name }}"

      - name: Run Migrations (core app)
        if: steps.find_task.outputs.task_arn != ''
        run: |
          aws ecs execute-command \
            --cluster DjangoECSCluster \
            --task ${{ steps.find_task.outputs.task_arn }} \
            --container dbt-container \
            --interactive \
            --command "python manage.py makemigrations core && python manage.py migrate core"

      - name: Run Migrations (other apps)
        if: steps.find_task.outputs.task_arn != ''
        run: |
          aws ecs execute-command \
            --cluster DjangoECSCluster \
            --task ${{ steps.find_task.outputs.task_arn }} \
            --container dbt-container \
            --interactive \
            --command "python manage.py makemigrations && python manage.py migrate"