AWSTemplateFormatVersion: "2010-09-09"
Description: "ECS Cluster for Django App"

Parameters:
  DockerImage:
    Type: String
    Default: "jdneto84/django-binance-trader:latest"

  DjangoSecretKey:
    Type: String
    NoEcho: true

  MysqlDbPass:
    Type: String
    NoEcho: true

  BinanceTestNetKey:
    Type: String
    NoEcho: true

  BinanceTestNetSecret:
    Type: String
    NoEcho: true

Resources:
  ECSCluster:
    Type: "AWS::ECS::Cluster"
    Properties:
      ClusterName: "DjangoECSCluster"

  ECSRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service: "ecs-tasks.amazonaws.com"
            Action: "sts:AssumeRole"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy
        - arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore
      Policies:
        - PolicyName: "ECSTaskPolicy"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"
                Resource: "arn:aws:logs:*:*:*"

  TaskDefinition:
    Type: "AWS::ECS::TaskDefinition"
    Properties:
      RequiresCompatibilities:
        - "FARGATE"
      Cpu: "256"
      Memory: "512"
      NetworkMode: "awsvpc"
      ExecutionRoleArn: !GetAtt ECSRole.Arn
      TaskRoleArn: !GetAtt ECSRole.Arn
      RuntimePlatform:
        OperatingSystemFamily: LINUX
      EphemeralStorage:
        SizeInGiB: 21
      ContainerDefinitions:
        - Name: "dbt-container"
          Image: !Ref "DockerImage"
          Essential: true
          PortMappings:
            - ContainerPort: 443
            - ContainerPort: 8000
          Environment:
            - Name: DJANGO_SECRET_KEY
              Value: !Ref "DjangoSecretKey"
            - Name: DJANGO_DEBUG
              Value: "True"
            - Name: DJANGO_DB_ENGINE
              Value: "mysql"
            - Name: DJANGO_ALLOWED_HOSTS
              Value: "*"
            - Name: MYSQL_DB_HOST
              Value: !ImportValue MySqlDBEndpoint
            - Name: MYSQL_DB_PORT
              Value: !ImportValue MySqlDBPort
            - Name: MYSQL_DB_NAME
              Value: "trader"
            - Name: MYSQL_DB_USER
              Value: "admin"
            - Name: MYSQL_DB_PASS
              Value: !Ref "MysqlDbPass"
            - Name: BINANCE_TSTNET_KEY
              Value: !Ref "BinanceTestNetKey"
            - Name: BINANCE_TSTNET_SECRET
              Value: !Ref "BinanceTestNetSecret"
          HealthCheck:
            Command: ["CMD-SHELL", "curl -f http://127.0.0.1:8000 || exit 1"]
            Interval: 30
            Timeout: 5
            Retries: 3
            StartPeriod: 60
          LogConfiguration:
            LogDriver: "awslogs"
            Options:
              awslogs-group: "/ecs/dbt-container"
              awslogs-region: !Ref "AWS::Region"
              awslogs-stream-prefix: "ecs"

  ECSService:
    Type: "AWS::ECS::Service"
    Properties:
      ServiceName: "ecs-stack-ECSService-replica"
      Cluster: !Ref ECSCluster
      DesiredCount: 1
      LaunchType: "FARGATE"
      TaskDefinition: !Ref TaskDefinition
      NetworkConfiguration:
        AwsvpcConfiguration:
          Subnets:
            - !ImportValue SubnetId1
            - !ImportValue SubnetId2
          SecurityGroups:
            - !ImportValue SecurityGroupId
          AssignPublicIp: "ENABLED"
      EnableExecuteCommand: true

Outputs:
  ECSClusterName:
    Value: !Ref ECSCluster
    Export:
      Name: ECSClusterName

  ECSServiceName:
    Value: !Ref ECSService
    Export:
      Name: ECSServiceName
